# usr/bin/python
# -*- coding:utf-8 -*-
#*******************************************************************************
#* Problem 2  : 
#* Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
#* By starting with 1 and 2, the first 10 terms will be:
#* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#* By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
#* find the sum of the even-valued terms.
#* lastupdate : 2020/05/15
#*******************************************************************************

def fibonacci(n):
    an1 = 1
    an2 = 1
    temp = 0
    for i in range(1, n):
        temp = an1
        an1 = an2
        an2 = an1 + temp
    return an2

if __name__ == '__main__':
    num_max = 4000000
    i = 1
    an = 1
    sum = 0
    while an <= num_max:
        an = fibonacci(i)
        if an%2 == 0 and an <= num_max:
            sum = sum + an
        i = i + 1
    print(sum)


