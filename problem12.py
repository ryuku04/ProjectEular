# usr/bin/python
# -*- coding:utf-8 -*-
#*******************************************************************************
#* Problem 11  : Highly divisible triangular number
#* The sequence of triangle numbers is generated by adding the natural numbers. 
#* So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#* 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#* Let us list the factors of the first seven triangle numbers:
#*  1: 1
#*  3: 1,3
#*  6: 1,2,3,6
#* 10: 1,2,5,10
#* 15: 1,3,5,15
#* 21: 1,3,7,21
#* 28: 1,2,4,7,14,28
#* We can see that 28 is the first triangle number to have over five divisors.
#* What is the value of the first triangle number to have over five hundred divisors?
#*******************************************************************************

import math

if __name__ == '__main__':

    num = 500
    count = 0
    triangle_num = 0
    factor_num = 0

    while factor_num < num:
        count = count + 1
        triangle_num = triangle_num + count

        factor_num = 0
        for i in range(1, triangle_num):
            if triangle_num % i == 0:
                factor_num = factor_num + 1
    
    print(count)
    print(factor_num)
