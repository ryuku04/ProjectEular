# usr/bin/python
# -*- coding:utf-8 -*-
#*******************************************************************************
#* Problem 8  : Largest product in a series
#* The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
#* 73167176531330624919225119674426574742355349194934
#* 96983520312774506326239578318016984801869478851843
#* 85861560789112949495459501737958331952853208805511
#* 12540698747158523863050715693290963295227443043557
#* 66896648950445244523161731856403098711121722383113
#* 62229893423380308135336276614282806444486645238749
#* 30358907296290491560440772390713810515859307960866
#* 70172427121883998797908792274921901699720888093776
#* 65727333001053367881220235421809751254540594752243
#* 52584907711670556013604839586446706324415722155397
#* 53697817977846174064955149290862569321978468622482
#* 83972241375657056057490261407972968652414535100474
#* 82166370484403199890008895243450658541227588666881
#* 16427171479924442928230863465674813919123162824586
#* 17866458359124566529476545682848912883142607690042
#* 24219022671055626321111109370544217506941658960408
#* 07198403850962455444362981230987879927244284909188
#* 84580156166097919133875499200524063689912560717606
#* 05886116467109405077541002256983155200055935729725
#* 71636269561882670428252483600823257530420752963450
#* Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
#*******************************************************************************
import math

def isPrime(n):
    if n <= 1:
        return False

    for i in range(2,n):
        if n%i == 0 :
            return False
    return True

if __name__ == '__main__':
    num = 13
    chara = '73167176531330624919225119674426574742355349194934'
    chara = chara + '96983520312774506326239578318016984801869478851843'
    chara = chara + '85861560789112949495459501737958331952853208805511'
    chara = chara + '12540698747158523863050715693290963295227443043557'
    chara = chara + '66896648950445244523161731856403098711121722383113'
    chara = chara + '62229893423380308135336276614282806444486645238749'
    chara = chara + '30358907296290491560440772390713810515859307960866'
    chara = chara + '70172427121883998797908792274921901699720888093776'
    chara = chara + '65727333001053367881220235421809751254540594752243'
    chara = chara + '52584907711670556013604839586446706324415722155397'
    chara = chara + '53697817977846174064955149290862569321978468622482'
    chara = chara + '83972241375657056057490261407972968652414535100474'
    chara = chara + '82166370484403199890008895243450658541227588666881'
    chara = chara + '16427171479924442928230863465674813919123162824586'
    chara = chara + '17866458359124566529476545682848912883142607690042'
    chara = chara + '24219022671055626321111109370544217506941658960408'
    chara = chara + '07198403850962455444362981230987879927244284909188'
    chara = chara + '84580156166097919133875499200524063689912560717606'
    chara = chara + '05886116467109405077541002256983155200055935729725'
    chara = chara + '71636269561882670428252483600823257530420752963450'
#    print(len(chara))
#    print(chara)

    max_digits_product = 0
    for i in range(0,1000-num):
#        print('**********')
        digit = chara[i:i+num]
#        print(digit)
        digits = list(digit)
        digits_product = 1
        for j in range(0,num):
#            print(int(digits[j]))
            digits_product = digits_product * int(digits[j])
#        print(digits_product)
#        print('**********')
        if digits_product > max_digits_product:
            max_digits_product = digits_product
    print(max_digits_product)
